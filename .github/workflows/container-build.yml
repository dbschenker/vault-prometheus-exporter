---
name: Build, Scan, and Push OCI Image

on:
  push:
    paths-ignore:
      - "docs/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - image: vault-prometheus-exporter
            dockerfile: docker/Dockerfile
            ghcr-image: ghcr.io/${{ github.repository }}/vault-prometheus-exporter
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.ghcr-image }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install dependencies
        run: |
          pip install -r app/requirements.txt
          pip install -r app/tests/requirements.txt

      - name: Run tests
        run: |
          export PYTHONPATH=$(pwd)
          pytest -v app/tests/

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image }}
          file: ${{ matrix.dockerfile }}
          push: false
          tags: ${{ matrix.ghcr-image }}:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: ${{ matrix.ghcr-image }}:latest
          format: table
          severity: CRITICAL,HIGH

      - name: Push
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ matrix.ghcr-image }}:latest
          labels: ${{ steps.meta.outputs.labels }}
